{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"NLP_Shakespeare","provenance":[],"authorship_tag":"ABX9TyNURroGu19z+wqio4Bq4v/d"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"DydSFR--UaG2","colab_type":"code","colab":{}},"source":["from tensorflow.keras.preprocessing.sequence import pad_sequences\n","from tensorflow.keras.layers import Embedding, LSTM, Dense, Dropout, Bidirectional\n","from tensorflow.keras.preprocessing.text import Tokenizer\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.optimizers import Adam\n","from tensorflow.keras import regularizers\n","import tensorflow as tf\n","import numpy as np"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"qJ3hPdQ2VY7x","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"outputId":"52017372-b007-42e2-f179-94c1047448bc","executionInfo":{"status":"ok","timestamp":1591157534077,"user_tz":-330,"elapsed":2573,"user":{"displayName":"somu dwivedi","photoUrl":"","userId":"14132788148145524412"}}},"source":["!wget --no-check-certificate \\\n","    https://storage.googleapis.com/laurencemoroney-blog.appspot.com/sonnets.txt \\\n","    -O /tmp/sonnets.txt"],"execution_count":4,"outputs":[{"output_type":"stream","text":["--2020-06-03 04:12:12--  https://storage.googleapis.com/laurencemoroney-blog.appspot.com/sonnets.txt\n","Resolving storage.googleapis.com (storage.googleapis.com)... 108.177.111.128, 2607:f8b0:4001:c03::80\n","Connecting to storage.googleapis.com (storage.googleapis.com)|108.177.111.128|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 93578 (91K) [text/plain]\n","Saving to: ‘/tmp/sonnets.txt’\n","\n","\r/tmp/sonnets.txt      0%[                    ]       0  --.-KB/s               \r/tmp/sonnets.txt    100%[===================>]  91.38K  --.-KB/s    in 0.001s  \n","\n","2020-06-03 04:12:12 (93.7 MB/s) - ‘/tmp/sonnets.txt’ saved [93578/93578]\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"iyXpGHsDYSKD","colab_type":"code","colab":{}},"source":["tokenizer = Tokenizer()\n","\n","data = open('/tmp/sonnets.txt').read()\n","\n","corpus = data.lower().split(\"\\n\")"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"PrtvbH8lZEjv","colab_type":"code","colab":{}},"source":["tokenizer.fit_on_texts(corpus)\n","total_words = len(tokenizer.word_index) + 1\n","\n","# create input sequences using list of tokens\n","input_sequences = []\n","for line in corpus:\n","  token_list = tokenizer.texts_to_sequences([line])[0]\n","  for i in range(1, len(token_list)):\n","    n_gram_sequence = token_list[:i+1]\n","    input_sequences.append(n_gram_sequence)\n","\n","# pad sequences\n","max_sequence_len = max([len(x) for x in input_sequences])\n","input_sequences = np.array(pad_sequences(input_sequences, maxlen=max_sequence_len, padding = 'pre'))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"f7LltWFVeYPR","colab_type":"code","colab":{}},"source":["import tensorflow.keras.utils as ku"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"lfHSDqHJc_GW","colab_type":"code","colab":{}},"source":["# create predictors and label\n","predictors, label = input_sequences[:,:-1],input_sequences[:,-1]\n","\n","label = ku.to_categorical(label, num_classes=total_words)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"r1w1Ox_fdvOt","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":374},"outputId":"a52028d6-d6de-4df3-98f5-b402511fd3a4","executionInfo":{"status":"ok","timestamp":1591160007771,"user_tz":-330,"elapsed":2184,"user":{"displayName":"somu dwivedi","photoUrl":"","userId":"14132788148145524412"}}},"source":["model = Sequential()\n","model.add(Embedding(total_words, 100, input_length=max_sequence_len-1))\n","model.add(Bidirectional(LSTM(150, return_sequences=True)))\n","model.add(Dropout(0.2))\n","model.add(LSTM(100))\n","model.add(Dense(total_words/2, activation='relu', kernel_regularizer=regularizers.l2(0.02)))\n","model.add(Dense(total_words, activation='softmax'))\n","model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])\n","print(model.summary())"],"execution_count":19,"outputs":[{"output_type":"stream","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding (Embedding)        (None, 10, 100)           321100    \n","_________________________________________________________________\n","bidirectional (Bidirectional (None, 10, 300)           301200    \n","_________________________________________________________________\n","dropout (Dropout)            (None, 10, 300)           0         \n","_________________________________________________________________\n","lstm_1 (LSTM)                (None, 100)               160400    \n","_________________________________________________________________\n","dense (Dense)                (None, 1605)              162105    \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 3211)              5156866   \n","=================================================================\n","Total params: 6,101,671\n","Trainable params: 6,101,671\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"tWkmmwAdhuEE","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"203e1d2b-7c76-4b20-c2f9-c0c687b7cf0b","executionInfo":{"status":"ok","timestamp":1591165375731,"user_tz":-330,"elapsed":5300122,"user":{"displayName":"somu dwivedi","photoUrl":"","userId":"14132788148145524412"}}},"source":["history = model.fit(predictors, label, epochs=100, verbose=1)"],"execution_count":20,"outputs":[{"output_type":"stream","text":["Epoch 1/100\n","484/484 [==============================] - 53s 110ms/step - loss: 6.9607 - accuracy: 0.0221\n","Epoch 2/100\n","484/484 [==============================] - 54s 112ms/step - loss: 6.5094 - accuracy: 0.0231\n","Epoch 3/100\n","484/484 [==============================] - 53s 110ms/step - loss: 6.4176 - accuracy: 0.0247\n","Epoch 4/100\n","484/484 [==============================] - 53s 109ms/step - loss: 6.3087 - accuracy: 0.0290\n","Epoch 5/100\n","484/484 [==============================] - 52s 108ms/step - loss: 6.2143 - accuracy: 0.0332\n","Epoch 6/100\n","484/484 [==============================] - 52s 108ms/step - loss: 6.1347 - accuracy: 0.0371\n","Epoch 7/100\n","484/484 [==============================] - 52s 108ms/step - loss: 6.0695 - accuracy: 0.0394\n","Epoch 8/100\n","484/484 [==============================] - 53s 110ms/step - loss: 6.0040 - accuracy: 0.0403\n","Epoch 9/100\n","484/484 [==============================] - 53s 109ms/step - loss: 5.9300 - accuracy: 0.0443\n","Epoch 10/100\n","484/484 [==============================] - 53s 109ms/step - loss: 5.8577 - accuracy: 0.0482\n","Epoch 11/100\n","484/484 [==============================] - 53s 109ms/step - loss: 5.7706 - accuracy: 0.0525\n","Epoch 12/100\n","484/484 [==============================] - 53s 109ms/step - loss: 5.6732 - accuracy: 0.0571\n","Epoch 13/100\n","484/484 [==============================] - 52s 108ms/step - loss: 5.5851 - accuracy: 0.0625\n","Epoch 14/100\n","484/484 [==============================] - 53s 109ms/step - loss: 5.4885 - accuracy: 0.0690\n","Epoch 15/100\n","484/484 [==============================] - 52s 108ms/step - loss: 5.3948 - accuracy: 0.0737\n","Epoch 16/100\n","484/484 [==============================] - 52s 108ms/step - loss: 5.3027 - accuracy: 0.0796\n","Epoch 17/100\n","484/484 [==============================] - 52s 108ms/step - loss: 5.2148 - accuracy: 0.0894\n","Epoch 18/100\n","484/484 [==============================] - 52s 108ms/step - loss: 5.1211 - accuracy: 0.0951\n","Epoch 19/100\n","484/484 [==============================] - 53s 110ms/step - loss: 5.0340 - accuracy: 0.1021\n","Epoch 20/100\n","484/484 [==============================] - 53s 109ms/step - loss: 4.9538 - accuracy: 0.1092\n","Epoch 21/100\n","484/484 [==============================] - 52s 108ms/step - loss: 4.8585 - accuracy: 0.1193\n","Epoch 22/100\n","484/484 [==============================] - 52s 108ms/step - loss: 4.7755 - accuracy: 0.1261\n","Epoch 23/100\n","484/484 [==============================] - 51s 106ms/step - loss: 4.6924 - accuracy: 0.1350\n","Epoch 24/100\n","484/484 [==============================] - 51s 105ms/step - loss: 4.6008 - accuracy: 0.1442\n","Epoch 25/100\n","484/484 [==============================] - 51s 106ms/step - loss: 4.5198 - accuracy: 0.1550\n","Epoch 26/100\n","484/484 [==============================] - 51s 106ms/step - loss: 4.4367 - accuracy: 0.1643\n","Epoch 27/100\n","484/484 [==============================] - 51s 106ms/step - loss: 4.3516 - accuracy: 0.1728\n","Epoch 28/100\n","484/484 [==============================] - 51s 105ms/step - loss: 4.2637 - accuracy: 0.1854\n","Epoch 29/100\n","484/484 [==============================] - 51s 105ms/step - loss: 4.1866 - accuracy: 0.1925\n","Epoch 30/100\n","484/484 [==============================] - 51s 105ms/step - loss: 4.0935 - accuracy: 0.2063\n","Epoch 31/100\n","484/484 [==============================] - 51s 105ms/step - loss: 4.0063 - accuracy: 0.2172\n","Epoch 32/100\n","484/484 [==============================] - 51s 106ms/step - loss: 3.9278 - accuracy: 0.2300\n","Epoch 33/100\n","484/484 [==============================] - 51s 105ms/step - loss: 3.8481 - accuracy: 0.2421\n","Epoch 34/100\n","484/484 [==============================] - 51s 105ms/step - loss: 3.7698 - accuracy: 0.2554\n","Epoch 35/100\n","484/484 [==============================] - 51s 105ms/step - loss: 3.6891 - accuracy: 0.2698\n","Epoch 36/100\n","484/484 [==============================] - 54s 112ms/step - loss: 3.6165 - accuracy: 0.2890\n","Epoch 37/100\n","484/484 [==============================] - 53s 109ms/step - loss: 3.5332 - accuracy: 0.2993\n","Epoch 38/100\n","484/484 [==============================] - 54s 111ms/step - loss: 3.4729 - accuracy: 0.3160\n","Epoch 39/100\n","484/484 [==============================] - 53s 110ms/step - loss: 3.3915 - accuracy: 0.3320\n","Epoch 40/100\n","484/484 [==============================] - 54s 112ms/step - loss: 3.3255 - accuracy: 0.3480\n","Epoch 41/100\n","484/484 [==============================] - 54s 111ms/step - loss: 3.2544 - accuracy: 0.3613\n","Epoch 42/100\n","484/484 [==============================] - 53s 110ms/step - loss: 3.1962 - accuracy: 0.3732\n","Epoch 43/100\n","484/484 [==============================] - 58s 121ms/step - loss: 3.1136 - accuracy: 0.3936\n","Epoch 44/100\n","484/484 [==============================] - 57s 117ms/step - loss: 3.0633 - accuracy: 0.4064\n","Epoch 45/100\n","484/484 [==============================] - 57s 117ms/step - loss: 2.9933 - accuracy: 0.4223\n","Epoch 46/100\n","484/484 [==============================] - 57s 117ms/step - loss: 2.9267 - accuracy: 0.4377\n","Epoch 47/100\n","484/484 [==============================] - 56s 115ms/step - loss: 2.8723 - accuracy: 0.4492\n","Epoch 48/100\n","484/484 [==============================] - 56s 116ms/step - loss: 2.8200 - accuracy: 0.4643\n","Epoch 49/100\n","484/484 [==============================] - 58s 121ms/step - loss: 2.7652 - accuracy: 0.4726\n","Epoch 50/100\n","484/484 [==============================] - 55s 114ms/step - loss: 2.7108 - accuracy: 0.4849\n","Epoch 51/100\n","484/484 [==============================] - 56s 115ms/step - loss: 2.6456 - accuracy: 0.5007\n","Epoch 52/100\n","484/484 [==============================] - 54s 112ms/step - loss: 2.6070 - accuracy: 0.5095\n","Epoch 53/100\n","484/484 [==============================] - 54s 112ms/step - loss: 2.5636 - accuracy: 0.5189\n","Epoch 54/100\n","484/484 [==============================] - 53s 109ms/step - loss: 2.5168 - accuracy: 0.5297\n","Epoch 55/100\n","484/484 [==============================] - 53s 110ms/step - loss: 2.4669 - accuracy: 0.5405\n","Epoch 56/100\n","484/484 [==============================] - 53s 110ms/step - loss: 2.4172 - accuracy: 0.5523\n","Epoch 57/100\n","484/484 [==============================] - 52s 108ms/step - loss: 2.3666 - accuracy: 0.5647\n","Epoch 58/100\n","484/484 [==============================] - 52s 108ms/step - loss: 2.3203 - accuracy: 0.5769\n","Epoch 59/100\n","484/484 [==============================] - 53s 110ms/step - loss: 2.2906 - accuracy: 0.5797\n","Epoch 60/100\n","484/484 [==============================] - 53s 110ms/step - loss: 2.2559 - accuracy: 0.5912\n","Epoch 61/100\n","484/484 [==============================] - 53s 109ms/step - loss: 2.2201 - accuracy: 0.5975\n","Epoch 62/100\n","484/484 [==============================] - 53s 109ms/step - loss: 2.1810 - accuracy: 0.6041\n","Epoch 63/100\n","484/484 [==============================] - 52s 107ms/step - loss: 2.1333 - accuracy: 0.6190\n","Epoch 64/100\n","484/484 [==============================] - 52s 107ms/step - loss: 2.1307 - accuracy: 0.6133\n","Epoch 65/100\n","484/484 [==============================] - 52s 107ms/step - loss: 2.0783 - accuracy: 0.6319\n","Epoch 66/100\n","484/484 [==============================] - 53s 109ms/step - loss: 2.0316 - accuracy: 0.6429\n","Epoch 67/100\n","484/484 [==============================] - 52s 107ms/step - loss: 2.0130 - accuracy: 0.6418\n","Epoch 68/100\n","484/484 [==============================] - 53s 109ms/step - loss: 1.9833 - accuracy: 0.6482\n","Epoch 69/100\n","484/484 [==============================] - 53s 109ms/step - loss: 1.9555 - accuracy: 0.6565\n","Epoch 70/100\n","484/484 [==============================] - 53s 109ms/step - loss: 1.9264 - accuracy: 0.6615\n","Epoch 71/100\n","484/484 [==============================] - 53s 109ms/step - loss: 1.8945 - accuracy: 0.6685\n","Epoch 72/100\n","484/484 [==============================] - 53s 109ms/step - loss: 1.8525 - accuracy: 0.6783\n","Epoch 73/100\n","484/484 [==============================] - 52s 107ms/step - loss: 1.8331 - accuracy: 0.6806\n","Epoch 74/100\n","484/484 [==============================] - 52s 107ms/step - loss: 1.8052 - accuracy: 0.6857\n","Epoch 75/100\n","484/484 [==============================] - 52s 107ms/step - loss: 1.7899 - accuracy: 0.6901\n","Epoch 76/100\n","484/484 [==============================] - 52s 107ms/step - loss: 1.7747 - accuracy: 0.6907\n","Epoch 77/100\n","484/484 [==============================] - 52s 107ms/step - loss: 1.7484 - accuracy: 0.6982\n","Epoch 78/100\n","484/484 [==============================] - 52s 108ms/step - loss: 1.7071 - accuracy: 0.7078\n","Epoch 79/100\n","484/484 [==============================] - 51s 106ms/step - loss: 1.6970 - accuracy: 0.7088\n","Epoch 80/100\n","484/484 [==============================] - 51s 105ms/step - loss: 1.6727 - accuracy: 0.7150\n","Epoch 81/100\n","484/484 [==============================] - 51s 105ms/step - loss: 1.6555 - accuracy: 0.7134\n","Epoch 82/100\n","484/484 [==============================] - 51s 105ms/step - loss: 1.6313 - accuracy: 0.7242\n","Epoch 83/100\n","484/484 [==============================] - 51s 105ms/step - loss: 1.6209 - accuracy: 0.7254\n","Epoch 84/100\n","484/484 [==============================] - 51s 106ms/step - loss: 1.5835 - accuracy: 0.7327\n","Epoch 85/100\n","484/484 [==============================] - 51s 105ms/step - loss: 1.5768 - accuracy: 0.7313\n","Epoch 86/100\n","484/484 [==============================] - 51s 105ms/step - loss: 1.5512 - accuracy: 0.7384\n","Epoch 87/100\n","484/484 [==============================] - 51s 105ms/step - loss: 1.5456 - accuracy: 0.7419\n","Epoch 88/100\n","484/484 [==============================] - 53s 108ms/step - loss: 1.5236 - accuracy: 0.7423\n","Epoch 89/100\n","484/484 [==============================] - 53s 110ms/step - loss: 1.4963 - accuracy: 0.7485\n","Epoch 90/100\n","484/484 [==============================] - 56s 116ms/step - loss: 1.4829 - accuracy: 0.7530\n","Epoch 91/100\n","484/484 [==============================] - 53s 110ms/step - loss: 1.4815 - accuracy: 0.7526\n","Epoch 92/100\n","484/484 [==============================] - 55s 114ms/step - loss: 1.4768 - accuracy: 0.7496\n","Epoch 93/100\n","484/484 [==============================] - 53s 109ms/step - loss: 1.4479 - accuracy: 0.7577\n","Epoch 94/100\n","484/484 [==============================] - 54s 112ms/step - loss: 1.4332 - accuracy: 0.7584\n","Epoch 95/100\n","484/484 [==============================] - 54s 111ms/step - loss: 1.4166 - accuracy: 0.7610\n","Epoch 96/100\n","484/484 [==============================] - 55s 113ms/step - loss: 1.3964 - accuracy: 0.7676\n","Epoch 97/100\n","484/484 [==============================] - 53s 109ms/step - loss: 1.3826 - accuracy: 0.7706\n","Epoch 98/100\n","484/484 [==============================] - 52s 108ms/step - loss: 1.3700 - accuracy: 0.7719\n","Epoch 99/100\n","484/484 [==============================] - 53s 110ms/step - loss: 1.3684 - accuracy: 0.7701\n","Epoch 100/100\n","484/484 [==============================] - 53s 109ms/step - loss: 1.3533 - accuracy: 0.7715\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"wFKCdZ2Jh_R3","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":545},"outputId":"d8eedab4-cc0c-41d8-a9a4-d9d48d3d987a","executionInfo":{"status":"ok","timestamp":1591165401817,"user_tz":-330,"elapsed":817,"user":{"displayName":"somu dwivedi","photoUrl":"","userId":"14132788148145524412"}}},"source":["import matplotlib.pyplot as plt\n","acc = history.history['accuracy']\n","loss = history.history['loss']\n","\n","epochs = range(len(acc))\n","\n","plt.plot(epochs, acc, 'b', label='Training accuracy')\n","plt.title('Training accuracy')\n","\n","plt.figure()\n","\n","plt.plot(epochs, loss, 'b', label='Training Loss')\n","plt.title('Training loss')\n","plt.legend()\n","\n","plt.show()"],"execution_count":21,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"povUU8Fz2TZL","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":105},"outputId":"005ebf23-eece-49b5-d43e-1fcfc796d80a","executionInfo":{"status":"ok","timestamp":1591165455745,"user_tz":-330,"elapsed":5103,"user":{"displayName":"somu dwivedi","photoUrl":"","userId":"14132788148145524412"}}},"source":["seed_text = \"Help me Obi Wan Kenobi, you're my only hope\"\n","next_words = 100\n","  \n","for _ in range(next_words):\n","\ttoken_list = tokenizer.texts_to_sequences([seed_text])[0]\n","\ttoken_list = pad_sequences([token_list], maxlen=max_sequence_len-1, padding='pre')\n","\tpredicted = model.predict_classes(token_list, verbose=0)\n","\toutput_word = \"\"\n","\tfor word, index in tokenizer.word_index.items():\n","\t\tif index == predicted:\n","\t\t\toutput_word = word\n","\t\t\tbreak\n","\tseed_text += \" \" + output_word\n","print(seed_text)"],"execution_count":22,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From <ipython-input-22-622d307fa19a>:7: Sequential.predict_classes (from tensorflow.python.keras.engine.sequential) is deprecated and will be removed after 2021-01-01.\n","Instructions for updating:\n","Please use instead:* `np.argmax(model.predict(x), axis=-1)`,   if your model does multi-class classification   (e.g. if it uses a `softmax` last-layer activation).* `(model.predict(x) > 0.5).astype(\"int32\")`,   if your model does binary classification   (e.g. if it uses a `sigmoid` last-layer activation).\n","Help me Obi Wan Kenobi, you're my only hope turn grows with true sort way sort way shown flowers die flowers within day gather'd flowers gather'd flowers room confounds wanting pride kind must find be straight free alchemy before proceeds appear appear erred sang torn borrow'd tongue affords express'd mother die live her skill stars hid in thine brow days express'd cry are laws approve me swerving live forth fullness such pride their pride lies buried tell well new bright ' hold such foes commend winter before kind lies sit ride behind twain behind forth give ill part on thee was his gifts in ill doth cross be pride\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"wRjNUeKc2fa2","colab_type":"code","colab":{}},"source":["\n"],"execution_count":0,"outputs":[]}]}